name: Weekly Consistency Metrics Update

on:
  schedule:
    # Runs every Wednesday at 7:00 AM UTC (after player scores are updated)
    # Adjust timing based on when your player scores workflow runs
    - cron: '0 7 * * 3'
  workflow_dispatch: {}

# Needed to push updated CSVs back to the repo
permissions:
  contents: write

concurrency:
  group: consistency-weekly
  cancel-in-progress: false

jobs:
  calculate-metrics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Ensure dependency manifest exists
        run: |
          if [ ! -f requirements.txt ]; then
            echo "pandas" > requirements.txt
            echo "requests" >> requirements.txt
            echo "polars" >> requirements.txt
            echo "numpy" >> requirements.txt
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .ENV from secrets/variables
        run: |
          cat > .ENV <<'EOF'
          mfl_api_key='${{ secrets.MFL_API_KEY }}'
          mfl_league_id='${{ secrets.MFL_LEAGUE_ID }}'
          current_season='${{ vars.CURRENT_SEASON }}'
          EOF

      - name: Run consistency metrics calculation
        run: python models/consistency.py

      - name: Remove ephemeral .ENV
        run: rm -f .ENV

      - name: Commit and push changes (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Rebase on latest to minimize push conflicts
          git pull --rebase || true
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore(data): update consistency metrics on $(date -u +'%Y-%m-%d') (run ${{ github.run_id }})"
            git push
          fi
